pipeline:
  name: Build and Deploy
  identifier: Deploy
  projectIdentifier: Martin
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: Build
        identifier: Build
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          caching:
            enabled: true
            override: true
            paths: []
          execution:
            steps:
              - step:
                  type: Run
                  name: Build and Test
                  identifier: Build_and_Test
                  spec:
                    connectorRef: account.dockerhub
                    image: maven:3.9.6-eclipse-temurin-17
                    shell: Bash
                    command: |-
                      set -e
                      cd app
                      BUILD_VERSION="1.0.<+pipeline.sequenceId>"
                      mvn -B -q \
                        -Dbuild.version="${BUILD_VERSION}" \
                        -Dbuild.sequence="<+pipeline.sequenceId>" \
                        -Dbuild.commit="<+codebase.commitSha>" \
                        clean package
                      JAR="$(ls target/*-SNAPSHOT.jar target/*.jar 2>/dev/null | head -n1)"
                      test -n "$JAR"
                      mkdir -p /harness/out && cp "$JAR" /harness/out/stocktrack.jar
                    reports:
                      type: JUnit
                      spec:
                        paths:
                          - "**/*.xml"
              - step:
                  type: Sonarqube
                  name: Sonarqube
                  identifier: Sonarqube
                  spec:
                    mode: orchestration
                    config: default
                    target:
                      type: repository
                      detection: auto
                    advanced:
                      log:
                        level: info
                    auth:
                      access_token: <+secrets.getValue('sonartoken')>
                      domain: https://sonar.harness.io/
                      ssl: true
                    tool:
                      exclude: "**/*.java"
                      project_key: stocktrack
              - step:
                  type: ArtifactoryUpload
                  name: ArtifactoryUpload
                  identifier: ArtifactoryUpload
                  spec:
                    connectorRef: account.Artifactory
                    target: stocktrack-libs-release-local/com/stocktrack/stocktrack/1.0.<+pipeline.sequenceId>/stocktrack-1.0.<+pipeline.sequenceId>.jar
                    sourcePath: app/target/stocktrack-1.0.<+pipeline.sequenceId>.jar
          buildIntelligence:
            enabled: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec:
              size: large
    - stage:
        name: Approval
        identifier: Approval
        description: ""
        type: Approval
        spec:
          execution:
            steps:
              - step:
                  name: Approval
                  identifier: Approval
                  type: HarnessApproval
                  timeout: 1d
                  spec:
                    approvalMessage: |-
                      Please review the following information
                      and approve the pipeline progression
                    includePipelineExecutionHistory: true
                    approvers:
                      minimumCount: 1
                      disallowPipelineExecutor: false
                      userGroups:
                        - account._account_all_users
                    isAutoRejectEnabled: false
                    approverInputs: []
        tags: {}
    - stage:
        name: Deploy
        identifier: Deploy
        description: ""
        type: Deployment
        spec:
          deploymentType: CustomDeployment
          customDeploymentRef:
            templateRef: Ansible
            versionLabel: v1.0
          service:
            serviceRef: stocktrack
            serviceInputs:
              serviceDefinition:
                type: CustomDeployment
                spec:
                  artifacts:
                    primary:
                      sources:
                        - identifier: stocktrack
                          type: ArtifactoryRegistry
                          spec:
                            artifactPath: <+input>
          execution:
            steps:
              - step:
                  name: Fetch Instances
                  identifier: fetchInstances
                  type: FetchInstanceScript
                  timeout: 10m
                  spec: {}
              - stepGroup:
                  name: Playbook
                  identifier: Playbook
                  template:
                    templateRef: account.Ansible_Playbook
                    versionLabel: v1.0
                    templateInputs:
                      variables:
                        - name: playbook
                          type: String
                          value: download.yml
                        - name: inventory
                          type: String
                          value: inventory.ini
                        - name: machinecredentials
                          type: Secret
                          value: account.pem
                        - name: artifact_url
                          type: String
                          value: <+pipeline.stages.Deploy.spec.artifacts.primary.metadata.url>
            rollbackSteps: []
          environment:
            environmentRef: CIT1
            deployToAll: false
            infrastructureDefinitions:
              - identifier: linux
                inputs:
                  identifier: linux
                  type: CustomDeployment
                  spec:
                    variables:
                      - name: GIT_URL
                        type: String
                        value: https://github.com/mansong1/ansible_demo.git
                      - name: GIT_REF
                        type: String
                        value: master
                      - name: INV_PATH
                        type: String
                        value: inventory.ini
                      - name: GROUP_FILTER
                        type: String
                        value: all
                      - name: ANSIBLE_USER
                        type: String
                        value: ec2-user
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
        delegateSelectors:
          - bofa
        when:
          pipelineStatus: Success
  properties:
    ci:
      codebase:
        connectorRef: account.Github
        repoName: StockTrack
        build: <+input>
  allowStageExecutions: true
  fixedInputsOnRerun: true
